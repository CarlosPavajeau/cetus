/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as ReturnsRouteImport } from './routes/returns'
import { Route as ProductsRouteImport } from './routes/products'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as OrdersRouteImport } from './routes/orders'
import { Route as FaqRouteImport } from './routes/faq'
import { Route as AppRouteImport } from './routes/app'
import { Route as StoreRequiredRouteImport } from './routes/_store-required'
import { Route as StoreRouteImport } from './routes/$store'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingIndexRouteImport } from './routes/onboarding.index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as ReviewsNewRouteImport } from './routes/reviews.new'
import { Route as ProductsSlugRouteImport } from './routes/products.$slug'
import { Route as OrdersIdRouteImport } from './routes/orders/$id'
import { Route as CategoriesSlugRouteImport } from './routes/categories.$slug'
import { Route as AppReviewsRouteImport } from './routes/app/reviews'
import { Route as AppProductOptionTypesRouteImport } from './routes/app/product-option-types'
import { Route as AppDeliveryFeesRouteImport } from './routes/app/delivery-fees'
import { Route as AppCategoriesRouteImport } from './routes/app/categories'
import { Route as AppAccountRouteImport } from './routes/app/account'
import { Route as AcceptInvitationIdRouteImport } from './routes/accept-invitation.$id'
import { Route as StoreRequiredCartRouteImport } from './routes/_store-required/cart'
import { Route as AppProductsIndexRouteImport } from './routes/app/products/index'
import { Route as AppDashboardIndexRouteImport } from './routes/app/dashboard/index'
import { Route as AppCouponsIndexRouteImport } from './routes/app/coupons/index'
import { Route as StoreRequiredCheckoutIndexRouteImport } from './routes/_store-required/checkout.index'
import { Route as OrdersOrderIdConfirmationRouteImport } from './routes/orders/$orderId.confirmation'
import { Route as OnboardingMercadoPagoLinkRouteImport } from './routes/onboarding.mercado-pago.link'
import { Route as AppProductsNewRouteImport } from './routes/app/products/new'
import { Route as AppOrdersOrderIdRouteImport } from './routes/app/orders/$orderId'
import { Route as AppCouponsNewRouteImport } from './routes/app/coupons/new'
import { Route as StoreRequiredProductsAllRouteImport } from './routes/_store-required/products/all'
import { Route as StoreRequiredCheckoutIdRouteImport } from './routes/_store-required/checkout.$id'
import { ServerRoute as ApiMercadopagoConnectServerRouteImport } from './routes/api/mercadopago/connect'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const ReturnsRoute = ReturnsRouteImport.update({
  id: '/returns',
  path: '/returns',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsRoute = ProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const OrdersRoute = OrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRouteImport,
} as any)
const FaqRoute = FaqRouteImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const StoreRequiredRoute = StoreRequiredRouteImport.update({
  id: '/_store-required',
  getParentRoute: () => rootRouteImport,
} as any)
const StoreRoute = StoreRouteImport.update({
  id: '/$store',
  path: '/$store',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const ReviewsNewRoute = ReviewsNewRouteImport.update({
  id: '/reviews/new',
  path: '/reviews/new',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsSlugRoute = ProductsSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => ProductsRoute,
} as any)
const OrdersIdRoute = OrdersIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => OrdersRoute,
} as any)
const CategoriesSlugRoute = CategoriesSlugRouteImport.update({
  id: '/categories/$slug',
  path: '/categories/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const AppReviewsRoute = AppReviewsRouteImport.update({
  id: '/reviews',
  path: '/reviews',
  getParentRoute: () => AppRoute,
} as any)
const AppProductOptionTypesRoute = AppProductOptionTypesRouteImport.update({
  id: '/product-option-types',
  path: '/product-option-types',
  getParentRoute: () => AppRoute,
} as any)
const AppDeliveryFeesRoute = AppDeliveryFeesRouteImport.update({
  id: '/delivery-fees',
  path: '/delivery-fees',
  getParentRoute: () => AppRoute,
} as any)
const AppCategoriesRoute = AppCategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => AppRoute,
} as any)
const AppAccountRoute = AppAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AppRoute,
} as any)
const AcceptInvitationIdRoute = AcceptInvitationIdRouteImport.update({
  id: '/accept-invitation/$id',
  path: '/accept-invitation/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const StoreRequiredCartRoute = StoreRequiredCartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => StoreRequiredRoute,
} as any)
const AppProductsIndexRoute = AppProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardIndexRoute = AppDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AppRoute,
} as any)
const AppCouponsIndexRoute = AppCouponsIndexRouteImport.update({
  id: '/coupons/',
  path: '/coupons/',
  getParentRoute: () => AppRoute,
} as any)
const StoreRequiredCheckoutIndexRoute =
  StoreRequiredCheckoutIndexRouteImport.update({
    id: '/checkout/',
    path: '/checkout/',
    getParentRoute: () => StoreRequiredRoute,
  } as any)
const OrdersOrderIdConfirmationRoute =
  OrdersOrderIdConfirmationRouteImport.update({
    id: '/$orderId/confirmation',
    path: '/$orderId/confirmation',
    getParentRoute: () => OrdersRoute,
  } as any)
const OnboardingMercadoPagoLinkRoute =
  OnboardingMercadoPagoLinkRouteImport.update({
    id: '/onboarding/mercado-pago/link',
    path: '/onboarding/mercado-pago/link',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppProductsNewRoute = AppProductsNewRouteImport.update({
  id: '/products/new',
  path: '/products/new',
  getParentRoute: () => AppRoute,
} as any)
const AppOrdersOrderIdRoute = AppOrdersOrderIdRouteImport.update({
  id: '/orders/$orderId',
  path: '/orders/$orderId',
  getParentRoute: () => AppRoute,
} as any)
const AppCouponsNewRoute = AppCouponsNewRouteImport.update({
  id: '/coupons/new',
  path: '/coupons/new',
  getParentRoute: () => AppRoute,
} as any)
const StoreRequiredProductsAllRoute =
  StoreRequiredProductsAllRouteImport.update({
    id: '/products/all',
    path: '/products/all',
    getParentRoute: () => StoreRequiredRoute,
  } as any)
const StoreRequiredCheckoutIdRoute = StoreRequiredCheckoutIdRouteImport.update({
  id: '/checkout/$id',
  path: '/checkout/$id',
  getParentRoute: () => StoreRequiredRoute,
} as any)
const ApiMercadopagoConnectServerRoute =
  ApiMercadopagoConnectServerRouteImport.update({
    id: '/api/mercadopago/connect',
    path: '/api/mercadopago/connect',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$store': typeof StoreRoute
  '/app': typeof AppRouteWithChildren
  '/faq': typeof FaqRoute
  '/orders': typeof OrdersRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/products': typeof ProductsRouteWithChildren
  '/returns': typeof ReturnsRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/terms': typeof TermsRoute
  '/cart': typeof StoreRequiredCartRoute
  '/accept-invitation/$id': typeof AcceptInvitationIdRoute
  '/app/account': typeof AppAccountRoute
  '/app/categories': typeof AppCategoriesRoute
  '/app/delivery-fees': typeof AppDeliveryFeesRoute
  '/app/product-option-types': typeof AppProductOptionTypesRoute
  '/app/reviews': typeof AppReviewsRoute
  '/categories/$slug': typeof CategoriesSlugRoute
  '/orders/$id': typeof OrdersIdRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/reviews/new': typeof ReviewsNewRoute
  '/app/': typeof AppIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/checkout/$id': typeof StoreRequiredCheckoutIdRoute
  '/products/all': typeof StoreRequiredProductsAllRoute
  '/app/coupons/new': typeof AppCouponsNewRoute
  '/app/orders/$orderId': typeof AppOrdersOrderIdRoute
  '/app/products/new': typeof AppProductsNewRoute
  '/onboarding/mercado-pago/link': typeof OnboardingMercadoPagoLinkRoute
  '/orders/$orderId/confirmation': typeof OrdersOrderIdConfirmationRoute
  '/checkout': typeof StoreRequiredCheckoutIndexRoute
  '/app/coupons': typeof AppCouponsIndexRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/products': typeof AppProductsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$store': typeof StoreRoute
  '/faq': typeof FaqRoute
  '/orders': typeof OrdersRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/products': typeof ProductsRouteWithChildren
  '/returns': typeof ReturnsRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/terms': typeof TermsRoute
  '/cart': typeof StoreRequiredCartRoute
  '/accept-invitation/$id': typeof AcceptInvitationIdRoute
  '/app/account': typeof AppAccountRoute
  '/app/categories': typeof AppCategoriesRoute
  '/app/delivery-fees': typeof AppDeliveryFeesRoute
  '/app/product-option-types': typeof AppProductOptionTypesRoute
  '/app/reviews': typeof AppReviewsRoute
  '/categories/$slug': typeof CategoriesSlugRoute
  '/orders/$id': typeof OrdersIdRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/reviews/new': typeof ReviewsNewRoute
  '/app': typeof AppIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/checkout/$id': typeof StoreRequiredCheckoutIdRoute
  '/products/all': typeof StoreRequiredProductsAllRoute
  '/app/coupons/new': typeof AppCouponsNewRoute
  '/app/orders/$orderId': typeof AppOrdersOrderIdRoute
  '/app/products/new': typeof AppProductsNewRoute
  '/onboarding/mercado-pago/link': typeof OnboardingMercadoPagoLinkRoute
  '/orders/$orderId/confirmation': typeof OrdersOrderIdConfirmationRoute
  '/checkout': typeof StoreRequiredCheckoutIndexRoute
  '/app/coupons': typeof AppCouponsIndexRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/products': typeof AppProductsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$store': typeof StoreRoute
  '/_store-required': typeof StoreRequiredRouteWithChildren
  '/app': typeof AppRouteWithChildren
  '/faq': typeof FaqRoute
  '/orders': typeof OrdersRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/products': typeof ProductsRouteWithChildren
  '/returns': typeof ReturnsRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/terms': typeof TermsRoute
  '/_store-required/cart': typeof StoreRequiredCartRoute
  '/accept-invitation/$id': typeof AcceptInvitationIdRoute
  '/app/account': typeof AppAccountRoute
  '/app/categories': typeof AppCategoriesRoute
  '/app/delivery-fees': typeof AppDeliveryFeesRoute
  '/app/product-option-types': typeof AppProductOptionTypesRoute
  '/app/reviews': typeof AppReviewsRoute
  '/categories/$slug': typeof CategoriesSlugRoute
  '/orders/$id': typeof OrdersIdRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/reviews/new': typeof ReviewsNewRoute
  '/app/': typeof AppIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/_store-required/checkout/$id': typeof StoreRequiredCheckoutIdRoute
  '/_store-required/products/all': typeof StoreRequiredProductsAllRoute
  '/app/coupons/new': typeof AppCouponsNewRoute
  '/app/orders/$orderId': typeof AppOrdersOrderIdRoute
  '/app/products/new': typeof AppProductsNewRoute
  '/onboarding/mercado-pago/link': typeof OnboardingMercadoPagoLinkRoute
  '/orders/$orderId/confirmation': typeof OrdersOrderIdConfirmationRoute
  '/_store-required/checkout/': typeof StoreRequiredCheckoutIndexRoute
  '/app/coupons/': typeof AppCouponsIndexRoute
  '/app/dashboard/': typeof AppDashboardIndexRoute
  '/app/products/': typeof AppProductsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$store'
    | '/app'
    | '/faq'
    | '/orders'
    | '/privacy'
    | '/products'
    | '/returns'
    | '/sign-in'
    | '/sign-up'
    | '/terms'
    | '/cart'
    | '/accept-invitation/$id'
    | '/app/account'
    | '/app/categories'
    | '/app/delivery-fees'
    | '/app/product-option-types'
    | '/app/reviews'
    | '/categories/$slug'
    | '/orders/$id'
    | '/products/$slug'
    | '/reviews/new'
    | '/app/'
    | '/onboarding'
    | '/checkout/$id'
    | '/products/all'
    | '/app/coupons/new'
    | '/app/orders/$orderId'
    | '/app/products/new'
    | '/onboarding/mercado-pago/link'
    | '/orders/$orderId/confirmation'
    | '/checkout'
    | '/app/coupons'
    | '/app/dashboard'
    | '/app/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$store'
    | '/faq'
    | '/orders'
    | '/privacy'
    | '/products'
    | '/returns'
    | '/sign-in'
    | '/sign-up'
    | '/terms'
    | '/cart'
    | '/accept-invitation/$id'
    | '/app/account'
    | '/app/categories'
    | '/app/delivery-fees'
    | '/app/product-option-types'
    | '/app/reviews'
    | '/categories/$slug'
    | '/orders/$id'
    | '/products/$slug'
    | '/reviews/new'
    | '/app'
    | '/onboarding'
    | '/checkout/$id'
    | '/products/all'
    | '/app/coupons/new'
    | '/app/orders/$orderId'
    | '/app/products/new'
    | '/onboarding/mercado-pago/link'
    | '/orders/$orderId/confirmation'
    | '/checkout'
    | '/app/coupons'
    | '/app/dashboard'
    | '/app/products'
  id:
    | '__root__'
    | '/'
    | '/$store'
    | '/_store-required'
    | '/app'
    | '/faq'
    | '/orders'
    | '/privacy'
    | '/products'
    | '/returns'
    | '/sign-in'
    | '/sign-up'
    | '/terms'
    | '/_store-required/cart'
    | '/accept-invitation/$id'
    | '/app/account'
    | '/app/categories'
    | '/app/delivery-fees'
    | '/app/product-option-types'
    | '/app/reviews'
    | '/categories/$slug'
    | '/orders/$id'
    | '/products/$slug'
    | '/reviews/new'
    | '/app/'
    | '/onboarding/'
    | '/_store-required/checkout/$id'
    | '/_store-required/products/all'
    | '/app/coupons/new'
    | '/app/orders/$orderId'
    | '/app/products/new'
    | '/onboarding/mercado-pago/link'
    | '/orders/$orderId/confirmation'
    | '/_store-required/checkout/'
    | '/app/coupons/'
    | '/app/dashboard/'
    | '/app/products/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  StoreRoute: typeof StoreRoute
  StoreRequiredRoute: typeof StoreRequiredRouteWithChildren
  AppRoute: typeof AppRouteWithChildren
  FaqRoute: typeof FaqRoute
  OrdersRoute: typeof OrdersRouteWithChildren
  PrivacyRoute: typeof PrivacyRoute
  ProductsRoute: typeof ProductsRouteWithChildren
  ReturnsRoute: typeof ReturnsRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  TermsRoute: typeof TermsRoute
  AcceptInvitationIdRoute: typeof AcceptInvitationIdRoute
  CategoriesSlugRoute: typeof CategoriesSlugRoute
  ReviewsNewRoute: typeof ReviewsNewRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
  OnboardingMercadoPagoLinkRoute: typeof OnboardingMercadoPagoLinkRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/mercadopago/connect': typeof ApiMercadopagoConnectServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/mercadopago/connect': typeof ApiMercadopagoConnectServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/mercadopago/connect': typeof ApiMercadopagoConnectServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$' | '/api/mercadopago/connect'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$' | '/api/mercadopago/connect'
  id: '__root__' | '/api/auth/$' | '/api/mercadopago/connect'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiMercadopagoConnectServerRoute: typeof ApiMercadopagoConnectServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/returns': {
      id: '/returns'
      path: '/returns'
      fullPath: '/returns'
      preLoaderRoute: typeof ReturnsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_store-required': {
      id: '/_store-required'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StoreRequiredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$store': {
      id: '/$store'
      path: '/$store'
      fullPath: '/$store'
      preLoaderRoute: typeof StoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/reviews/new': {
      id: '/reviews/new'
      path: '/reviews/new'
      fullPath: '/reviews/new'
      preLoaderRoute: typeof ReviewsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$slug': {
      id: '/products/$slug'
      path: '/$slug'
      fullPath: '/products/$slug'
      preLoaderRoute: typeof ProductsSlugRouteImport
      parentRoute: typeof ProductsRoute
    }
    '/orders/$id': {
      id: '/orders/$id'
      path: '/$id'
      fullPath: '/orders/$id'
      preLoaderRoute: typeof OrdersIdRouteImport
      parentRoute: typeof OrdersRoute
    }
    '/categories/$slug': {
      id: '/categories/$slug'
      path: '/categories/$slug'
      fullPath: '/categories/$slug'
      preLoaderRoute: typeof CategoriesSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/reviews': {
      id: '/app/reviews'
      path: '/reviews'
      fullPath: '/app/reviews'
      preLoaderRoute: typeof AppReviewsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/product-option-types': {
      id: '/app/product-option-types'
      path: '/product-option-types'
      fullPath: '/app/product-option-types'
      preLoaderRoute: typeof AppProductOptionTypesRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/delivery-fees': {
      id: '/app/delivery-fees'
      path: '/delivery-fees'
      fullPath: '/app/delivery-fees'
      preLoaderRoute: typeof AppDeliveryFeesRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/categories': {
      id: '/app/categories'
      path: '/categories'
      fullPath: '/app/categories'
      preLoaderRoute: typeof AppCategoriesRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/account': {
      id: '/app/account'
      path: '/account'
      fullPath: '/app/account'
      preLoaderRoute: typeof AppAccountRouteImport
      parentRoute: typeof AppRoute
    }
    '/accept-invitation/$id': {
      id: '/accept-invitation/$id'
      path: '/accept-invitation/$id'
      fullPath: '/accept-invitation/$id'
      preLoaderRoute: typeof AcceptInvitationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_store-required/cart': {
      id: '/_store-required/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof StoreRequiredCartRouteImport
      parentRoute: typeof StoreRequiredRoute
    }
    '/app/products/': {
      id: '/app/products/'
      path: '/products'
      fullPath: '/app/products'
      preLoaderRoute: typeof AppProductsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/dashboard/': {
      id: '/app/dashboard/'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/coupons/': {
      id: '/app/coupons/'
      path: '/coupons'
      fullPath: '/app/coupons'
      preLoaderRoute: typeof AppCouponsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_store-required/checkout/': {
      id: '/_store-required/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof StoreRequiredCheckoutIndexRouteImport
      parentRoute: typeof StoreRequiredRoute
    }
    '/orders/$orderId/confirmation': {
      id: '/orders/$orderId/confirmation'
      path: '/$orderId/confirmation'
      fullPath: '/orders/$orderId/confirmation'
      preLoaderRoute: typeof OrdersOrderIdConfirmationRouteImport
      parentRoute: typeof OrdersRoute
    }
    '/onboarding/mercado-pago/link': {
      id: '/onboarding/mercado-pago/link'
      path: '/onboarding/mercado-pago/link'
      fullPath: '/onboarding/mercado-pago/link'
      preLoaderRoute: typeof OnboardingMercadoPagoLinkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/products/new': {
      id: '/app/products/new'
      path: '/products/new'
      fullPath: '/app/products/new'
      preLoaderRoute: typeof AppProductsNewRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/orders/$orderId': {
      id: '/app/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/app/orders/$orderId'
      preLoaderRoute: typeof AppOrdersOrderIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/coupons/new': {
      id: '/app/coupons/new'
      path: '/coupons/new'
      fullPath: '/app/coupons/new'
      preLoaderRoute: typeof AppCouponsNewRouteImport
      parentRoute: typeof AppRoute
    }
    '/_store-required/products/all': {
      id: '/_store-required/products/all'
      path: '/products/all'
      fullPath: '/products/all'
      preLoaderRoute: typeof StoreRequiredProductsAllRouteImport
      parentRoute: typeof StoreRequiredRoute
    }
    '/_store-required/checkout/$id': {
      id: '/_store-required/checkout/$id'
      path: '/checkout/$id'
      fullPath: '/checkout/$id'
      preLoaderRoute: typeof StoreRequiredCheckoutIdRouteImport
      parentRoute: typeof StoreRequiredRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/mercadopago/connect': {
      id: '/api/mercadopago/connect'
      path: '/api/mercadopago/connect'
      fullPath: '/api/mercadopago/connect'
      preLoaderRoute: typeof ApiMercadopagoConnectServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface StoreRequiredRouteChildren {
  StoreRequiredCartRoute: typeof StoreRequiredCartRoute
  StoreRequiredCheckoutIdRoute: typeof StoreRequiredCheckoutIdRoute
  StoreRequiredProductsAllRoute: typeof StoreRequiredProductsAllRoute
  StoreRequiredCheckoutIndexRoute: typeof StoreRequiredCheckoutIndexRoute
}

const StoreRequiredRouteChildren: StoreRequiredRouteChildren = {
  StoreRequiredCartRoute: StoreRequiredCartRoute,
  StoreRequiredCheckoutIdRoute: StoreRequiredCheckoutIdRoute,
  StoreRequiredProductsAllRoute: StoreRequiredProductsAllRoute,
  StoreRequiredCheckoutIndexRoute: StoreRequiredCheckoutIndexRoute,
}

const StoreRequiredRouteWithChildren = StoreRequiredRoute._addFileChildren(
  StoreRequiredRouteChildren,
)

interface AppRouteChildren {
  AppAccountRoute: typeof AppAccountRoute
  AppCategoriesRoute: typeof AppCategoriesRoute
  AppDeliveryFeesRoute: typeof AppDeliveryFeesRoute
  AppProductOptionTypesRoute: typeof AppProductOptionTypesRoute
  AppReviewsRoute: typeof AppReviewsRoute
  AppIndexRoute: typeof AppIndexRoute
  AppCouponsNewRoute: typeof AppCouponsNewRoute
  AppOrdersOrderIdRoute: typeof AppOrdersOrderIdRoute
  AppProductsNewRoute: typeof AppProductsNewRoute
  AppCouponsIndexRoute: typeof AppCouponsIndexRoute
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
  AppProductsIndexRoute: typeof AppProductsIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAccountRoute: AppAccountRoute,
  AppCategoriesRoute: AppCategoriesRoute,
  AppDeliveryFeesRoute: AppDeliveryFeesRoute,
  AppProductOptionTypesRoute: AppProductOptionTypesRoute,
  AppReviewsRoute: AppReviewsRoute,
  AppIndexRoute: AppIndexRoute,
  AppCouponsNewRoute: AppCouponsNewRoute,
  AppOrdersOrderIdRoute: AppOrdersOrderIdRoute,
  AppProductsNewRoute: AppProductsNewRoute,
  AppCouponsIndexRoute: AppCouponsIndexRoute,
  AppDashboardIndexRoute: AppDashboardIndexRoute,
  AppProductsIndexRoute: AppProductsIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface OrdersRouteChildren {
  OrdersIdRoute: typeof OrdersIdRoute
  OrdersOrderIdConfirmationRoute: typeof OrdersOrderIdConfirmationRoute
}

const OrdersRouteChildren: OrdersRouteChildren = {
  OrdersIdRoute: OrdersIdRoute,
  OrdersOrderIdConfirmationRoute: OrdersOrderIdConfirmationRoute,
}

const OrdersRouteWithChildren =
  OrdersRoute._addFileChildren(OrdersRouteChildren)

interface ProductsRouteChildren {
  ProductsSlugRoute: typeof ProductsSlugRoute
}

const ProductsRouteChildren: ProductsRouteChildren = {
  ProductsSlugRoute: ProductsSlugRoute,
}

const ProductsRouteWithChildren = ProductsRoute._addFileChildren(
  ProductsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  StoreRoute: StoreRoute,
  StoreRequiredRoute: StoreRequiredRouteWithChildren,
  AppRoute: AppRouteWithChildren,
  FaqRoute: FaqRoute,
  OrdersRoute: OrdersRouteWithChildren,
  PrivacyRoute: PrivacyRoute,
  ProductsRoute: ProductsRouteWithChildren,
  ReturnsRoute: ReturnsRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  TermsRoute: TermsRoute,
  AcceptInvitationIdRoute: AcceptInvitationIdRoute,
  CategoriesSlugRoute: CategoriesSlugRoute,
  ReviewsNewRoute: ReviewsNewRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
  OnboardingMercadoPagoLinkRoute: OnboardingMercadoPagoLinkRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiMercadopagoConnectServerRoute: ApiMercadopagoConnectServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
