/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TermsImport } from './routes/terms'
import { Route as ReturnsImport } from './routes/returns'
import { Route as ProductsImport } from './routes/products'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as OrdersImport } from './routes/orders'
import { Route as FaqImport } from './routes/faq'
import { Route as CheckoutImport } from './routes/checkout'
import { Route as CartImport } from './routes/cart'
import { Route as AppImport } from './routes/app'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as ReviewsNewImport } from './routes/reviews.new'
import { Route as ProductsSlugImport } from './routes/products/$slug'
import { Route as OrdersIdImport } from './routes/orders/$id'
import { Route as AppDeliveryFeesImport } from './routes/app/delivery-fees'
import { Route as AppCategoriesImport } from './routes/app/categories'
import { Route as AppProductsIndexImport } from './routes/app/products/index'
import { Route as AppDashboardIndexImport } from './routes/app/dashboard/index'
import { Route as OrdersOrderIdConfirmationImport } from './routes/orders/$orderId.confirmation'
import { Route as AppProductsNewImport } from './routes/app/products/new'
import { Route as AppOrdersOrderIdImport } from './routes/app/orders/$orderId'

// Create/Update Routes

const TermsRoute = TermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRoute,
} as any)

const ReturnsRoute = ReturnsImport.update({
  id: '/returns',
  path: '/returns',
  getParentRoute: () => rootRoute,
} as any)

const ProductsRoute = ProductsImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyRoute = PrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const OrdersRoute = OrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRoute,
} as any)

const FaqRoute = FaqImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutRoute = CheckoutImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const ReviewsNewRoute = ReviewsNewImport.update({
  id: '/reviews/new',
  path: '/reviews/new',
  getParentRoute: () => rootRoute,
} as any)

const ProductsSlugRoute = ProductsSlugImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => ProductsRoute,
} as any)

const OrdersIdRoute = OrdersIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => OrdersRoute,
} as any)

const AppDeliveryFeesRoute = AppDeliveryFeesImport.update({
  id: '/delivery-fees',
  path: '/delivery-fees',
  getParentRoute: () => AppRoute,
} as any)

const AppCategoriesRoute = AppCategoriesImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => AppRoute,
} as any)

const AppProductsIndexRoute = AppProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => AppRoute,
} as any)

const AppDashboardIndexRoute = AppDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AppRoute,
} as any)

const OrdersOrderIdConfirmationRoute = OrdersOrderIdConfirmationImport.update({
  id: '/$orderId/confirmation',
  path: '/$orderId/confirmation',
  getParentRoute: () => OrdersRoute,
} as any)

const AppProductsNewRoute = AppProductsNewImport.update({
  id: '/products/new',
  path: '/products/new',
  getParentRoute: () => AppRoute,
} as any)

const AppOrdersOrderIdRoute = AppOrdersOrderIdImport.update({
  id: '/orders/$orderId',
  path: '/orders/$orderId',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutImport
      parentRoute: typeof rootRoute
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqImport
      parentRoute: typeof rootRoute
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsImport
      parentRoute: typeof rootRoute
    }
    '/returns': {
      id: '/returns'
      path: '/returns'
      fullPath: '/returns'
      preLoaderRoute: typeof ReturnsImport
      parentRoute: typeof rootRoute
    }
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsImport
      parentRoute: typeof rootRoute
    }
    '/app/categories': {
      id: '/app/categories'
      path: '/categories'
      fullPath: '/app/categories'
      preLoaderRoute: typeof AppCategoriesImport
      parentRoute: typeof AppImport
    }
    '/app/delivery-fees': {
      id: '/app/delivery-fees'
      path: '/delivery-fees'
      fullPath: '/app/delivery-fees'
      preLoaderRoute: typeof AppDeliveryFeesImport
      parentRoute: typeof AppImport
    }
    '/orders/$id': {
      id: '/orders/$id'
      path: '/$id'
      fullPath: '/orders/$id'
      preLoaderRoute: typeof OrdersIdImport
      parentRoute: typeof OrdersImport
    }
    '/products/$slug': {
      id: '/products/$slug'
      path: '/$slug'
      fullPath: '/products/$slug'
      preLoaderRoute: typeof ProductsSlugImport
      parentRoute: typeof ProductsImport
    }
    '/reviews/new': {
      id: '/reviews/new'
      path: '/reviews/new'
      fullPath: '/reviews/new'
      preLoaderRoute: typeof ReviewsNewImport
      parentRoute: typeof rootRoute
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/app/orders/$orderId': {
      id: '/app/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/app/orders/$orderId'
      preLoaderRoute: typeof AppOrdersOrderIdImport
      parentRoute: typeof AppImport
    }
    '/app/products/new': {
      id: '/app/products/new'
      path: '/products/new'
      fullPath: '/app/products/new'
      preLoaderRoute: typeof AppProductsNewImport
      parentRoute: typeof AppImport
    }
    '/orders/$orderId/confirmation': {
      id: '/orders/$orderId/confirmation'
      path: '/$orderId/confirmation'
      fullPath: '/orders/$orderId/confirmation'
      preLoaderRoute: typeof OrdersOrderIdConfirmationImport
      parentRoute: typeof OrdersImport
    }
    '/app/dashboard/': {
      id: '/app/dashboard/'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardIndexImport
      parentRoute: typeof AppImport
    }
    '/app/products/': {
      id: '/app/products/'
      path: '/products'
      fullPath: '/app/products'
      preLoaderRoute: typeof AppProductsIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppCategoriesRoute: typeof AppCategoriesRoute
  AppDeliveryFeesRoute: typeof AppDeliveryFeesRoute
  AppIndexRoute: typeof AppIndexRoute
  AppOrdersOrderIdRoute: typeof AppOrdersOrderIdRoute
  AppProductsNewRoute: typeof AppProductsNewRoute
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
  AppProductsIndexRoute: typeof AppProductsIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppCategoriesRoute: AppCategoriesRoute,
  AppDeliveryFeesRoute: AppDeliveryFeesRoute,
  AppIndexRoute: AppIndexRoute,
  AppOrdersOrderIdRoute: AppOrdersOrderIdRoute,
  AppProductsNewRoute: AppProductsNewRoute,
  AppDashboardIndexRoute: AppDashboardIndexRoute,
  AppProductsIndexRoute: AppProductsIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface OrdersRouteChildren {
  OrdersIdRoute: typeof OrdersIdRoute
  OrdersOrderIdConfirmationRoute: typeof OrdersOrderIdConfirmationRoute
}

const OrdersRouteChildren: OrdersRouteChildren = {
  OrdersIdRoute: OrdersIdRoute,
  OrdersOrderIdConfirmationRoute: OrdersOrderIdConfirmationRoute,
}

const OrdersRouteWithChildren =
  OrdersRoute._addFileChildren(OrdersRouteChildren)

interface ProductsRouteChildren {
  ProductsSlugRoute: typeof ProductsSlugRoute
}

const ProductsRouteChildren: ProductsRouteChildren = {
  ProductsSlugRoute: ProductsSlugRoute,
}

const ProductsRouteWithChildren = ProductsRoute._addFileChildren(
  ProductsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/faq': typeof FaqRoute
  '/orders': typeof OrdersRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/products': typeof ProductsRouteWithChildren
  '/returns': typeof ReturnsRoute
  '/terms': typeof TermsRoute
  '/app/categories': typeof AppCategoriesRoute
  '/app/delivery-fees': typeof AppDeliveryFeesRoute
  '/orders/$id': typeof OrdersIdRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/reviews/new': typeof ReviewsNewRoute
  '/app/': typeof AppIndexRoute
  '/app/orders/$orderId': typeof AppOrdersOrderIdRoute
  '/app/products/new': typeof AppProductsNewRoute
  '/orders/$orderId/confirmation': typeof OrdersOrderIdConfirmationRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/products': typeof AppProductsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/faq': typeof FaqRoute
  '/orders': typeof OrdersRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/products': typeof ProductsRouteWithChildren
  '/returns': typeof ReturnsRoute
  '/terms': typeof TermsRoute
  '/app/categories': typeof AppCategoriesRoute
  '/app/delivery-fees': typeof AppDeliveryFeesRoute
  '/orders/$id': typeof OrdersIdRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/reviews/new': typeof ReviewsNewRoute
  '/app': typeof AppIndexRoute
  '/app/orders/$orderId': typeof AppOrdersOrderIdRoute
  '/app/products/new': typeof AppProductsNewRoute
  '/orders/$orderId/confirmation': typeof OrdersOrderIdConfirmationRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/products': typeof AppProductsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/faq': typeof FaqRoute
  '/orders': typeof OrdersRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/products': typeof ProductsRouteWithChildren
  '/returns': typeof ReturnsRoute
  '/terms': typeof TermsRoute
  '/app/categories': typeof AppCategoriesRoute
  '/app/delivery-fees': typeof AppDeliveryFeesRoute
  '/orders/$id': typeof OrdersIdRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/reviews/new': typeof ReviewsNewRoute
  '/app/': typeof AppIndexRoute
  '/app/orders/$orderId': typeof AppOrdersOrderIdRoute
  '/app/products/new': typeof AppProductsNewRoute
  '/orders/$orderId/confirmation': typeof OrdersOrderIdConfirmationRoute
  '/app/dashboard/': typeof AppDashboardIndexRoute
  '/app/products/': typeof AppProductsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/cart'
    | '/checkout'
    | '/faq'
    | '/orders'
    | '/privacy'
    | '/products'
    | '/returns'
    | '/terms'
    | '/app/categories'
    | '/app/delivery-fees'
    | '/orders/$id'
    | '/products/$slug'
    | '/reviews/new'
    | '/app/'
    | '/app/orders/$orderId'
    | '/app/products/new'
    | '/orders/$orderId/confirmation'
    | '/app/dashboard'
    | '/app/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cart'
    | '/checkout'
    | '/faq'
    | '/orders'
    | '/privacy'
    | '/products'
    | '/returns'
    | '/terms'
    | '/app/categories'
    | '/app/delivery-fees'
    | '/orders/$id'
    | '/products/$slug'
    | '/reviews/new'
    | '/app'
    | '/app/orders/$orderId'
    | '/app/products/new'
    | '/orders/$orderId/confirmation'
    | '/app/dashboard'
    | '/app/products'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/cart'
    | '/checkout'
    | '/faq'
    | '/orders'
    | '/privacy'
    | '/products'
    | '/returns'
    | '/terms'
    | '/app/categories'
    | '/app/delivery-fees'
    | '/orders/$id'
    | '/products/$slug'
    | '/reviews/new'
    | '/app/'
    | '/app/orders/$orderId'
    | '/app/products/new'
    | '/orders/$orderId/confirmation'
    | '/app/dashboard/'
    | '/app/products/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  CartRoute: typeof CartRoute
  CheckoutRoute: typeof CheckoutRoute
  FaqRoute: typeof FaqRoute
  OrdersRoute: typeof OrdersRouteWithChildren
  PrivacyRoute: typeof PrivacyRoute
  ProductsRoute: typeof ProductsRouteWithChildren
  ReturnsRoute: typeof ReturnsRoute
  TermsRoute: typeof TermsRoute
  ReviewsNewRoute: typeof ReviewsNewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  CartRoute: CartRoute,
  CheckoutRoute: CheckoutRoute,
  FaqRoute: FaqRoute,
  OrdersRoute: OrdersRouteWithChildren,
  PrivacyRoute: PrivacyRoute,
  ProductsRoute: ProductsRouteWithChildren,
  ReturnsRoute: ReturnsRoute,
  TermsRoute: TermsRoute,
  ReviewsNewRoute: ReviewsNewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/cart",
        "/checkout",
        "/faq",
        "/orders",
        "/privacy",
        "/products",
        "/returns",
        "/terms",
        "/reviews/new"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app.tsx",
      "children": [
        "/app/categories",
        "/app/delivery-fees",
        "/app/",
        "/app/orders/$orderId",
        "/app/products/new",
        "/app/dashboard/",
        "/app/products/"
      ]
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/checkout": {
      "filePath": "checkout.tsx"
    },
    "/faq": {
      "filePath": "faq.tsx"
    },
    "/orders": {
      "filePath": "orders.tsx",
      "children": [
        "/orders/$id",
        "/orders/$orderId/confirmation"
      ]
    },
    "/privacy": {
      "filePath": "privacy.tsx"
    },
    "/products": {
      "filePath": "products.tsx",
      "children": [
        "/products/$slug"
      ]
    },
    "/returns": {
      "filePath": "returns.tsx"
    },
    "/terms": {
      "filePath": "terms.tsx"
    },
    "/app/categories": {
      "filePath": "app/categories.tsx",
      "parent": "/app"
    },
    "/app/delivery-fees": {
      "filePath": "app/delivery-fees.tsx",
      "parent": "/app"
    },
    "/orders/$id": {
      "filePath": "orders/$id.tsx",
      "parent": "/orders"
    },
    "/products/$slug": {
      "filePath": "products/$slug.tsx",
      "parent": "/products"
    },
    "/reviews/new": {
      "filePath": "reviews.new.tsx"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/app/orders/$orderId": {
      "filePath": "app/orders/$orderId.tsx",
      "parent": "/app"
    },
    "/app/products/new": {
      "filePath": "app/products/new.tsx",
      "parent": "/app"
    },
    "/orders/$orderId/confirmation": {
      "filePath": "orders/$orderId.confirmation.tsx",
      "parent": "/orders"
    },
    "/app/dashboard/": {
      "filePath": "app/dashboard/index.tsx",
      "parent": "/app"
    },
    "/app/products/": {
      "filePath": "app/products/index.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
